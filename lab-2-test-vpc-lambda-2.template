{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "TestVPCCIDR": {
      "Description": "CIDR Block for Developer VPC",
      "Type": "String",
      "Default": "10.1.0.0/16",
      "AllowedValues": [
        "10.1.0.0/16"
      ]
    },
    "TestPublicSubnetCIDR": {
      "Description": "TestEnv Public Subnet",
      "Type": "String",
      "Default": "10.1.10.0/24",
      "AllowedValues": [
        "10.1.10.0/24"
      ]
    },
    "KeyName": {
      "Description": "Key Pair Name",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Mappings": {
    "AmazonLinuxAMI": {
      "us-east-1": {
        "AMI": "ami-1ecae776"
      },
      "us-west-1": {
        "AMI": "ami-d114f295"
      },
      "us-west-2": {
        "AMI": "ami-e7527ed7"
      },
      "eu-west-1": {
        "AMI": "ami-a10897d6"
      },
      "eu-central-1": {
        "AMI": "ami-a8221fb5"
      },
      "sa-east-1": {
        "AMI": "ami-b52890a8"
      },
      "ap-southeast-1": {
        "AMI": "ami-68d8e93a"
      },
      "ap-southeast-2": {
        "AMI": "ami-fd9cecc7"
      },
      "ap-northeast-1": {
        "AMI": "ami-cbf90ecb"
      }
    }
  },
  "Resources": {
    "TestVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "TestVPCCIDR"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "VPC",
            "Value": "Test VPC"
          },
          {
            "Key": "Name",
            "Value": "Test VPC"
          }
        ]
      }
    },
    "TestInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "TestVPC"
    },
    "TestAttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "TestVPC",
        "TestInternetGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        },
        "InternetGatewayId": {
          "Ref": "TestInternetGateway"
        }
      }
    },
    "TestPublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "TestAttachGateway",
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        },
        "CidrBlock": {
          "Ref": "TestPublicSubnetCIDR"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Test Public Subnet"
          }
        ]
      }
    },
    "TestPublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": [
        "TestVPC",
        "TestAttachGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "TestVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Test Public Route Table"
          }
        ]
      }
    },
    "TestPublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "TestPublicRouteTable",
        "TestAttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "TestPublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "TestInternetGateway"
        }
      }
    },
    "TestPublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "TestPublicRouteTable",
        "TestPublicSubnet",
        "TestAttachGateway"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "TestPublicSubnet"
        },
        "RouteTableId": {
          "Ref": "TestPublicRouteTable"
        }
      }
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "TestAttachGateway",
      "Properties": {
        "GroupDescription": "Security Group for Web server",
        "VpcId": {
          "Ref": "TestVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebServerSecurityGroup"
          },
          {
            "Key": "InstanceType",
            "Value": "General"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "WebServerWaitHandle01": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Properties": {}
    },
    "WebServerWaitCondition01": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "TestWebServer",
      "Properties": {
        "Handle": {
          "Ref": "WebServerWaitHandle01"
        },
        "Timeout": "1800"
      }
    },
    "TestWebServer": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": [
        "TestPublicSubnet",
        "WebServerSecurityGroup",
        "TestAttachGateway"
      ],
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AmazonLinuxAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": "t2.medium",
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "AssociatePublicIpAddress": "true",
            "SubnetId": {
              "Ref": "TestPublicSubnet"
            },
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroup"
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestWebServer"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum -y update \n",
                "mkdir /home/ec2-user/.aws \n",
                "cat > /home/ec2-user/.aws/config <<EOF\n",
                "[default]\n",
                "region = ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "EOF\n",
                "chown -R ec2-user:ec2-user /home/ec2-user/.aws\n",
                "cd /home/ec2-user\n",
                "yum groupinstall -y \"Web Server\" \"PHP Support\"\n",
                "chkconfig httpd on\n",
                "cd /var/www/html\n",
                "wget https://d2lrzjb0vjvpn5.cloudfront.net/devops/v1.5/lab-2-iac/static/ec2-info.zip\n",
                "unzip ec2-info.zip\n",
                "service httpd start 2>/home/ec2-user/errors.txt\n",
                "/opt/aws/bin/cfn-signal -s true '",
                {
                  "Ref": "WebServerWaitHandle01"
                },
                "'\n"
              ]
            ]
          }
        }
      }
    },
    "TestEnvironmentChecker1": {
      "Type": "Custom::TestEnvironmentChecker",
      "DependsOn": [
        "WebServerWaitCondition01"
      ],
      "Version": "1.0",
      "Properties": {
		"ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:CfnVerifierLambda" ] ] },
        "UrlChecks": [
          {
            "Fn::Join": [
              "",
              [
                "http://",
                {
                  "Fn::GetAtt": [
                    "TestWebServer",
                    "PublicIp"
                  ]
                },
                "/index.php"
              ]
            ]
          }
        ]
      }
    }
  }
}
